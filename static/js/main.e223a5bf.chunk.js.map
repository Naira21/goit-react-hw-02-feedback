{"version":3,"sources":["App.js","index.js"],"names":["App","state","good","neutral","bad","goodHandlerCounter","setState","prevState","neutralHandlerCounter","e","badHandlerCounter","this","name","onClick","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAaaA,EAAb,4MACIC,MAAQ,CACJC,KAAM,EACNC,QAAS,EACTC,IAAK,GAJb,EAQIC,mBAAqB,WACrB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CACxBL,KAAMK,EAAUL,KAAO,OAV/B,EAcIM,sBAAwB,SAACC,GACrB,EAAKH,UAAS,SAAAC,GAAS,MAAK,CACxBJ,QAASI,EAAUJ,QAAU,OAhBzC,EAoBIO,kBAAoB,WAChB,EAAKJ,UAAS,SAAAC,GAAS,MAAK,CACxBH,IAAKG,EAAUH,IAAM,OAtBjC,4CAgCI,WACI,MAA+BO,KAAKV,MAA5BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAChBC,EAA8DM,KAA9DN,mBAAoBG,EAA0CG,KAA1CH,sBAAuBE,EAAmBC,KAAnBD,kBAClD,OACI,gCACE,uDAIE,gCACA,wBAAQE,KAAK,WAAWC,QAASR,EAAjC,kBACA,wBAAQO,KAAK,cAAcC,QAASL,EAApC,qBACA,wBAAQI,KAAK,UAAUC,QAASH,EAAhC,oBAGJ,4CACA,+BACI,qBAAIE,KAAK,WAAT,kBAA0BV,KAC1B,qBAAIU,KAAK,cAAT,qBAAgCT,KAChC,qBAAIS,KAAK,UAAT,iBAAwBR,eAnDxC,GAAyBU,aAiEVd,ICxEfe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e223a5bf.chunk.js","sourcesContent":["import './App.css';\nimport { Component } from 'react';\n//import {Feedback} from './components/Feedback'\n\n// class App extends Component{\n//   render() {\n//     return (\n//     <Feedback />\n//   )\n//   }\n  \n// }\n\nexport class App extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0\n    }\n    \n\n    goodHandlerCounter = () => {\n    this.setState(prevState => ({\n        good: prevState.good + 1,\n        }));\n    }    \n    \n    neutralHandlerCounter = (e) => {\n        this.setState(prevState => ({\n            neutral: prevState.neutral + 1,\n            }));\n    }\n\n    badHandlerCounter = () => {\n        this.setState(prevState => ({\n            bad: prevState.bad + 1,\n        }));\n    }\n\n    // countTotalFeedback = () => {\n    //     this.state.reduce((total, good, neutral, bad) => (total + good + neutral + bad), 0);\n    // }\n    \n    //countPositiveFeedbackPercentage=()=>{ this.handlerCounter:this.countTotalFeedback*100}\n\n    render() {\n        const { good, neutral, bad } = this.state\n        const {goodHandlerCounter, neutralHandlerCounter, badHandlerCounter}=this\n        return (            \n            <div>\n              <h1>Please leave feedback</h1>\n                {/* <Feedback\n                    goodMark={good} neutralMark={neutral} badMark={bad} counter={handlerCounter} total={countTotalFeedback} positveFeedback={ countPositiveFeedbackPercentage}/>\n                 */}\n                <div>\n                <button name='goodMark' onClick={goodHandlerCounter}>Good</button>\n                <button name='neutralMark' onClick={neutralHandlerCounter}>Neutral</button>\n                <button name='badMark' onClick={badHandlerCounter}>Bad</button>\n            </div>\n\n            <p> Statistics</p>\n            <ul>\n                <li name='goodMark'>Good:{good}</li>\n                <li name='neutralMark'>Neutral:{neutral}</li>\n                <li name='badMark'>Bad:{bad}</li>\n                {/* <li>Total:{total}</li>\n                <li>Positive feedback:{positveFeedback}</li> */}\n            </ul>\n\n            </div>\n           \n\n        )\n    }\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}